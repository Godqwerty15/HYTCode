1509. 펠린드롬 분할
      - 펠린드롬? 문제와 동일한 방식으로 n * n 크기의 bool 배열을 선언하고 펠린드롬임을 확인하는 dp를 진행해야 한다.
      - dp는 길이가 1인 펠린드롬, 2인 펠린드롬을 미리 구성해 둔 뒤에 양옆 요소가 같으면 추가로 펠린드롬임을 등록시키는 과정을 반복하면 된다.
      - 그 후에 탑다운 함수를 만들어서 시작점부터 끝까지 펠린드롬이 성립하는 인덱스가 확인되면 거기서 펠린드롬 분할을 한 뒤에 다시 분할을 시작하는 경우의 수를 각각 구해서 test 값에 저장한 뒤 가장 작은 값을 메모에 담고 리턴한다.
      - 함수를 인덱스 0에서 시작하면 최소 분할값을 찾을 수 있다.
4929. 수열 걷기
      - 입력값을 sys로 받은 뒤에 마지막 0 값을 제거하고 data[2*i]와 data[2*i+1]에 대한 반복문을 진행한다.
      - 두 개의 수열 중 하나의 원소들의 인덱스값을 각각 딕셔너리에 저장한다.
      - 다른 수열에서 원소들을 하나하나 체크하면서 first 값을 갱신하다가 그 값이 딕셔너리 안에 존재할 때, 기존 수열의 last_pos부터 딕셔너리 값에 해당하는 원소들의 합을 구하여 second 값을 갱신하고 first 값과 비교하여 더 큰 값을 ans에 더하고 last_pos 값을 갱신한다.
      - 마지막에 남은 first와 second 값을 한번 더 구해서 더해주고 ans를 출력한다.
2252. 줄 세우기
      - 딕셔너리로 각 노드들에 대하여 더 큰 값을 가진 노드들을 저장한다.
      - 첫 노드부터 시작해서 각 노드의 더 큰 값을 가진 노드들을 다 출력하고 나서 현재 노드를 출력하는 재귀함수 line()을 실행한다.
      - 이때 한번 출력된 값을 check 딕셔너리로 확인해서 중복 출력을 방지한다.
      - python3로 제출하면 통과하나, pypy3로 제출하면 메모리 초과 문제가 발생한다.
2448. 별 찍기 - 11
      - 각 행의 별들은 3 과 2의 제곱수의 곱만큼의 전 행의 별의 위치를 참조하여 위치가 정해진다.
      - 반복문으로 그 짓거리를 하면 된다. 단순함.
1647. 도시 분할 계획
      - 도시를 두 묶음으로 나누어서 있는 데에는 건물 개수 N개에서 2개를 뺀 N-2개의 간선만 있으면 가능하다.
      - 그러므로 N-2개의 간선을 얼마나 효율적으로 연결하느냐가 이 문제에서 요구하는 정답이다.
      - 일단 N-2개의 간선을 사용하더라도 도시가 두 묶음으로 나뉘지 않는 상황을 방지하기 위해서 각 건물이 어떤 묶음에 포함되어 있는지를 확인하는 딕셔너리가 필요하다.
      - 두 건물이 다 아무 묶음에도 포함되어 있지 않았다면 둘이서 새로운 묶음에 포함되고, 둘 중 하나만 포함되었다면 포함되지 않은 건물을 포함된 건물의 묶음에 추가해 준다.
      - 두 건물이 다 묶음에 포함되어 있다면 두 건물이 "서로 다른" 묶음에 포함되어 있을 시엔 그 간선을 채택하고 두 묶음을 합쳐 주어야 한다. 반면 동일한 묶음에 포함되어 있다면 그 간선은 채택하지 않는다.
      - 이때 파이썬의 경우 최적화가 매우 중요하다. 두 묶음을 합칠 때 길이가 더 짧은 묶음을 더 긴 묶음에 extend해줘야 하며(단순하게 리스트 덧셈 연산을 사용하면 시간초과), 더 짧은 묶음 안에 들어 있던 건물들의 묶음 딕셔너리를 갱신해 주어야 한다.
1197. 최소 스패닝 트리
      - 바로 위 1647. 도시 분할 계획의 standard형 문제이다. 도시 분할 계획 코드의 N-2를 N-1로 풀면 통과한다.
33272. TAIDADA
      - 어떤 자연수와 XOR해서 특정 자연수 K가 나오게 하는 수는 하나 뿐이라는 걸 활용해서 딕셔너리를 활용하거나 부등호 계산으로 수열 안에 수를 넣으면 된다. 메모리 제한이 1024MB라서 딕셔너리를 만들어도 되겠지만, 좀 더 스마트하게 하고 싶다면 허진식으로
      - 자신과 K의 XOR 값이 자기보다 클 때에만 수열 안에 수를 넣는 방법이 있다.(단, 이 방법은 자기자신에 대해서 0이라는 예외가 생기기 때문에 거기에 대해서만 예외처리를 해주면 된다.)
